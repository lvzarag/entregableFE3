{"ast":null,"code":"var _jsxFileName = \"/Users/lucianazaragoza/Desktop/FE3/entregableFE3/entregableFE3/src/components/Item.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\"; // El componente Item no tiene componentes hijos.\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\n// Maqueta de Item:\n//    h3\n//    p\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Item(props) {\n  _s();\n\n  // const [count, setCount] = useState({stock});\n  const [availableStock, setAvailableStock] = useState(props.stock);\n  const stock = availableStock > 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"producto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.nombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.descripcion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"Stock: \", stock ? availableStock : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Producto Agotado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: !stock,\n      onClick: () => {\n        setAvailableStock(availableStock - 1);\n        props.addItem();\n      },\n      children: stock ? 'COMPRAR' : 'SIN STOCK'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Item, \"8Vk8s4TqwwQCT6ROmu4/3qo9jeE=\");\n\n_c = Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"names":["useState","Item","props","availableStock","setAvailableStock","stock","nombre","descripcion","addItem"],"sources":["/Users/lucianazaragoza/Desktop/FE3/entregableFE3/entregableFE3/src/components/Item.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\n\r\n// El componente Item no tiene componentes hijos.\r\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\r\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\r\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\r\n// Maqueta de Item:\r\n//    h3\r\n//    p\r\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\r\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\r\n\r\nexport default function Item(props) {\r\n\r\n  // const [count, setCount] = useState({stock});\r\n\r\n  const [availableStock, setAvailableStock] = useState(props.stock)\r\n  const stock = availableStock > 0\r\n\r\n\r\n  return (\r\n    <div className='producto'>\r\n      {/* maquetar Item aquí */}\r\n      <h3>{props.nombre}</h3>\r\n      <p>{props.descripcion}</p>\r\n      <h5>Stock: {stock ? availableStock : <span>Producto Agotado</span>}</h5>\r\n      {/* <button  type=\"button\" class=\"btn btn-primary\"  onClick={()=>setCount(count-1)}>Comprar</button> */}\r\n      <button\r\n         disabled={!stock}\r\n         onClick={() => {\r\n           setAvailableStock(availableStock - 1)\r\n           props.addItem()\r\n           } }>\r\n           {stock ? 'COMPRAR' : 'SIN STOCK'}\r\n       </button>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;EAAA;;EAElC;EAEA,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCJ,QAAQ,CAACE,KAAK,CAACG,KAAP,CAApD;EACA,MAAMA,KAAK,GAAGF,cAAc,GAAG,CAA/B;EAGA,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,wBAEE;MAAA,UAAKD,KAAK,CAACI;IAAX;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA,UAAIJ,KAAK,CAACK;IAAV;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAA,sBAAYF,KAAK,GAAGF,cAAH,gBAAoB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAArC;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,eAME;MACG,QAAQ,EAAE,CAACE,KADd;MAEG,OAAO,EAAE,MAAM;QACbD,iBAAiB,CAACD,cAAc,GAAG,CAAlB,CAAjB;QACAD,KAAK,CAACM,OAAN;MACC,CALN;MAAA,UAMMH,KAAK,GAAG,SAAH,GAAe;IAN1B;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD;;GA3BuBJ,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}